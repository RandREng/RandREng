//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RandREng.QBLibrary.QBServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QBRequest", Namespace="http://RandREng.com/contracts/")]
    [System.SerializableAttribute()]
    public partial class QBRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppID {
            get {
                return this.AppIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIDField, value) != true)) {
                    this.AppIDField = value;
                    this.RaisePropertyChanged("AppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppName {
            get {
                return this.AppNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppNameField, value) != true)) {
                    this.AppNameField = value;
                    this.RaisePropertyChanged("AppName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyFile {
            get {
                return this.CompanyFileField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyFileField, value) != true)) {
                    this.CompanyFileField = value;
                    this.RaisePropertyChanged("CompanyFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XML {
            get {
                return this.XMLField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLField, value) != true)) {
                    this.XMLField = value;
                    this.RaisePropertyChanged("XML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QBResponse", Namespace="http://RandREng.com/contracts/")]
    [System.SerializableAttribute()]
    public partial class QBResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://RandREng.com/contracts/", ConfigurationName="QBServer.IQBService")]
    public interface IQBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RandREng.com/contracts/IQBService/Send", ReplyAction="http://RandREng.com/contracts/IQBService/SendResponse")]
        RandREng.QBLibrary.QBServer.QBResponse Send(RandREng.QBLibrary.QBServer.QBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RandREng.com/contracts/IQBService/Send", ReplyAction="http://RandREng.com/contracts/IQBService/SendResponse")]
        System.Threading.Tasks.Task<RandREng.QBLibrary.QBServer.QBResponse> SendAsync(RandREng.QBLibrary.QBServer.QBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RandREng.com/contracts/IQBService/GetMaxVersion", ReplyAction="http://RandREng.com/contracts/IQBService/GetMaxVersionResponse")]
        RandREng.QBLibrary.QBServer.QBResponse GetMaxVersion(RandREng.QBLibrary.QBServer.QBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RandREng.com/contracts/IQBService/GetMaxVersion", ReplyAction="http://RandREng.com/contracts/IQBService/GetMaxVersionResponse")]
        System.Threading.Tasks.Task<RandREng.QBLibrary.QBServer.QBResponse> GetMaxVersionAsync(RandREng.QBLibrary.QBServer.QBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RandREng.com/contracts/IQBService/Disconnect", ReplyAction="http://RandREng.com/contracts/IQBService/DisconnectResponse")]
        void Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RandREng.com/contracts/IQBService/Disconnect", ReplyAction="http://RandREng.com/contracts/IQBService/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQBServiceChannel : RandREng.QBLibrary.QBServer.IQBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QBServiceClient : System.ServiceModel.ClientBase<RandREng.QBLibrary.QBServer.IQBService>, RandREng.QBLibrary.QBServer.IQBService {
        
        public QBServiceClient() {
        }
        
        public QBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RandREng.QBLibrary.QBServer.QBResponse Send(RandREng.QBLibrary.QBServer.QBRequest request) {
            return base.Channel.Send(request);
        }
        
        public System.Threading.Tasks.Task<RandREng.QBLibrary.QBServer.QBResponse> SendAsync(RandREng.QBLibrary.QBServer.QBRequest request) {
            return base.Channel.SendAsync(request);
        }
        
        public RandREng.QBLibrary.QBServer.QBResponse GetMaxVersion(RandREng.QBLibrary.QBServer.QBRequest request) {
            return base.Channel.GetMaxVersion(request);
        }
        
        public System.Threading.Tasks.Task<RandREng.QBLibrary.QBServer.QBResponse> GetMaxVersionAsync(RandREng.QBLibrary.QBServer.QBRequest request) {
            return base.Channel.GetMaxVersionAsync(request);
        }
        
        public void Disconnect() {
            base.Channel.Disconnect();
        }
        
        public System.Threading.Tasks.Task DisconnectAsync() {
            return base.Channel.DisconnectAsync();
        }
    }
}
